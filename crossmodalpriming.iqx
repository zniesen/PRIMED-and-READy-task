<usermanual>
___________________________________________________________________________________________________________________    

                                    CROSS-MODAL SEMANTIC PRIMING TASK
___________________________________________________________________________________________________________________    

**Script Author**: Katja Borchert, Ph.D. (katjab@millisecond.com)  
**Date**: 09-13-2013  
**Last Updated**: 06-27-2025 by Zoe Niesen 

**Copyright** © 02-21-2022 Millisecond Software  

___________________________________________________________________________________________________________________    
BACKGROUND INFO    
___________________________________________________________________________________________________________________    

This script implements a basic cross-modal priming paradigm (audio → visual). 
The central question is whether people respond more quickly when the priming word (auditory) or the target word (visual) are related or when they are unrelated.

Priming procedures are typically simple, response-timed binary categorization tasks using items from two target categories (e.g., positive vs. negative adjectives).  
They are based on the assumption that people respond faster when the target category is already *mentally activated* by briefly showing a related *prime*.

For example, a participant may categorize the word “good” as *positive* more quickly after seeing the prime “ice-cream” than after seeing “famine”.  
This script adapts that structure to a cross-modal design, using **auditory primes** and **visual targets**.

> Millisecond Software thanks Dr. Sumner for supporting development and providing the stimuli.

**Reference**:  
Sumner, M. (2013). *A phonetic explanation of pronunciation variant effects.*  
**JASA Express Letters**. [https://doi.org/10.1121/1.4807432]

___________________________________________________________________________________________________________________    
TASK DESCRIPTION    
___________________________________________________________________________________________________________________    

Participants hear audio recordings of words (primes), followed by visual words (targets) presented in the center of the screen.  
They are asked to perform a classification task:

- Press one key if the target is **related** to the priming word
- Press another key if the target is **unrelated** to the priming word

Participants are instructed to respond **as quickly as possible**.

___________________________________________________________________________________________________________________    
DURATION    
___________________________________________________________________________________________________________________    

The default setup takes approximately **5 minutes** to complete.

___________________________________________________________________________________________________________________    
DATA FILE INFORMATION    
___________________________________________________________________________________________________________________    

### (1) Raw data file: `crossmodalpriming_raw*.iqdat` (one file per participant)

Includes:

- **System Info**:  
  - `build` = Inquisit version used  
  - `computer.platform` = platform used (Win/Mac/iOS/Android)  
  - `date`, `time` = when script was run  
- **Participant Info**:  
  - `subject`, `group`, `session` = assigned values  

- **Trial/Block Info**:  
  - `blockcode`, `blocknum` = current block name and number  
  - `trialcode`, `trialnum` = current trial name and number  
    > Note: `trialnum` counts all trials, including non-recorded (e.g., feedback), so may not equal total task trials.

- **Experimental Variables**:  
  - `currentisi` = time between offset of prime and onset of target  
  - `relatedness` =  
    - 1 = related target  
    - 2 = unrelated target  
  - `prime` = auditory word played  
  - `target` = visual word presented  
  - `stimulusitem` = presentation order

- **Response Info**:  
  - `response` = scancode of key pressed  
    - 30 = A (left)  
    - 38 = L (right)  
  - `resp` = response label (RELATED or UNRELATED)  
  - `correct` = accuracy (1 = correct; 0 = incorrect)  
  - `latency` = reaction time (ms) from target onset

---

### (2) Summary data file: `crossmodalpriming_summary*.iqdat`

Includes:

- `inquisit.version`, `computer.platform`  
- `startDate`, `startTime`, `subjectid`
- `elapsedTime` = total run time (ms)  
- `completed` =  
  - 1 = script completed  
  - 0 = script not completed

**Parameter Settings:**

- `usefixedISI` =  
  - true = fixed ISI (set by `/fixedISI`)  
  - false = variable ISIs (see Editable Lists)
- `fixedISI` = ISI value (if fixed)
- `maxtargetpresentation` = max target duration (response-terminated)
- `ITI` = intertrial interval
- `fontheight` = size of visual targets

**Summary DVs:**
- `R` = related  
- `UR` = unrelated  

Error Rates:  
- `errorrate_R`, `errorrate_UR` = error rate for classifying related targets

Mean RTs:  
- `meanRT_R`, `meanRT_UR` = mean response time (correct responses only)

Standard Deviation Scores:
- `stdevRT_R`, `stdevRT_UR` = standard deviation of the response time (correct responses only)

Difference Score:
- 'DiffRT' = Difference Score between mean latency in unrelated condition and mean latency in related condition
  - meanRT_UR is expected to be slower (bigger latency) and therefore DiffRT is expected to be positive.

___________________________________________________________________________________________________________________    
EXPERIMENTAL SET-UP    
___________________________________________________________________________________________________________________    

**Design**:  
- 2 Relatedness levels (Related vs. Unrelated)  
- Related targets are not identical words; rather, they are synonyms or words that may be found in a similar contexts.
- 24 items per condition (×2 = 48 trials)  
→ 50% related / 50% unrelated targets

**Trial Sequence:**  
`Audio prime` → `ISI` → `Visual target` → `Response or timeout` → `ITI`

**Customization Options:**  
- ISI:  
  - Fixed (default = 100ms)  
  - Variable (see Editable Lists)  
- ITI (default = 1000ms)  

___________________________________________________________________________________________________________________    
STIMULI    
___________________________________________________________________________________________________________________    

- **Audio**: Word recordings from Dr. Sumner  
- **Visual**: Word targets from Zoe Niesen
- Font: *Times New Roman*, adjustable via `/fontheight`

___________________________________________________________________________________________________________________    
INSTRUCTIONS    
___________________________________________________________________________________________________________________    

Instructions can be customized under:  
`EDITABLE CODE → Editable Instructions`

___________________________________________________________________________________________________________________    
EDITABLE CODE    
___________________________________________________________________________________________________________________    

You can easily customize the following:

### Response Key Setup:
/responsekey1 = "A"  
/responsekey2 = "L"  

### Duration Settings:
/getReadyDuration = 2000 ms  
/maxtargetpresentation = 2000 ms  
/ITI = 1000 ms  
/usefixedISI = true  
/fixedISI = 100 ms

### Visual Presentation:
/fontheight = 5% (of screen height)

</usermanual>

**************************************************************************************************************
**************************************************************************************************************
	EDITABLE PARAMETERS: change editable parameters here
**************************************************************************************************************
**************************************************************************************************************

<parameters>
/responsekey1 = "A"
/responsekey2 = "L"

/getReadyDuration = 2000
/maxtargetpresentation = 2000
/ITI = 1000
/usefixedISI = true
/fixedISI = 100

/fontheight = 5%
</parameters>

**************************************************************************************************************
**************************************************************************************************************
	EDITABLE STIMULI: change editable stimuli here
**************************************************************************************************************
**************************************************************************************************************

******************************
primes = audio files of words
targets = visual words

R = related
UR = unrelated
******************************

******************************
Primes
******************************

<item primes_R>
/1 = "m_body.wav"
/2 = "m_highers.wav"
/3 = "m_awesome.wav"
/4 = "m_sibling.wav"
/5 = "m_morning.wav"
/6 = "m_around.wav"
/7 = "m_produce.wav"
/8 = "m_music.wav"
/9 = "m_uprise.wav"
/10 = "m_urban.wav"
/11 = "m_crazy.wav"
/12 = "m_complain.wav"
/13 = "m_doorbell.wav"
/14 = "m_eggshell.wav"
/15 = "m_sheet.wav"
/16 = "m_airplane.wav"
/17 = "m_pipe.wav"
/18 = "m_sandal.wav"
/19 = "m_map.wav"
/20 = "m_lemon.wav"
/21 = "m_plain.wav"
/22 = "m_car.wav"
/23 = "m_add.wav"
/24 = "m_spoon.wav"
</item>

<item primes_UR>
/1 = "m_ugly.wav"
/2 = "m_yellow.wav"
/3 = "m_side.wav"
/4 = "m_pound.wav"
/5 = "m_ring.wav"
/6 = "m_lap.wav"
/7 = "m_able.wav"
/8 = "m_pole.wav"
/9 = "m_view.wav"
/10 = "m_palm.wav"
/11 = "m_dorm.wav"
/12 = "m_number.wav"
/13 = "m_mural.wav"
/14 = "m_hinder.wav"
/15 = "m_season.wav"
/16 = "m_washer.wav"
/17 = "m_cook.wav"
/18 = "m_morsel.wav"
/19 = "m_lens.wav"
/20 = "m_clock.wav"
/21 = "m_deer.wav"
/22 = "m_cell.wav"
/23 = "m_charger.wav"
/24 = "m_open.wav"
</item>

******************************
Targets
******************************

<item targets_R>
/1 = "arm"
/2 = "above"
/3 = "amazing"
/4 = "cousin"
/5 = "day"
/6 = "near"
/7 = "carrot"
/8 = "song"
/9 = "mutiny"
/10 = "city"
/11 = "insane"
/12 = "rant"
/13 = "knocking"
/14 = "chicken"
/15 = "paper"
/16 = "ticket"
/17 = "plumber"
/18 = "shoe"
/19 = "route"
/20 = "sour"
/21 = "ordinary"
/22 = "gasoline"
/23 = "plus"
/24 = "fork"
</item>

<item targets_UR>
/1 = "worry"
/2 = "always"
/3 = "expose"
/4 = "member"
/5 = "jealous"
/6 = "shiny"
/7 = "shark"
/8 = "become"
/9 = "success"
/10 = "legal"
/11 = "panda"
/12 = "cower"
/13 = "bottle"
/14 = "blue"
/15 = "leg"
/16 = "love"
/17 = "sun"
/18 = "telephone"
/19 = "instruct"
/20 = "volcano"
/21 = "staircase"
/22 = "bracelet"
/23 = "pillow"
/24 = "clover"
</item>

**************************************************************************************************************
**************************************************************************************************************
	EDITABLE INSTRUCTIONS: change instructions here
**************************************************************************************************************
**************************************************************************************************************
<instruct>
/ fontstyle = ("Arial", 3.00%, false, false, false, false, 5, 1)
/ navigationbuttonfontstyle = ("Arial", 3.00%, false, false, false, false, 5, 1)
</instruct>

<page intro>
<h1>Welcome!</h1><br><br>
In this task you will be presented with auditory-visual pairs of English words.
You will first hear the audio recording of a word. This recording is followed by the presentation
of a visual word in the middle of the computer screen.<br><br>
Your task is to decide whether the visual word on the monitor is related or unrelated to the auditory word.<br><br>
If the VISUAL word is a RELATED word: press the <%values.RELATEDwordkey%>- button<br> 
If the VISUAL word is an UNRELATED word: press the <%values.UNRELATEDwordkey%>- button<br><br><br>
For this task, it is important to respond as fast as you can without making errors.<br><br>
Press [SPACE] to start.
</page>

<text finish>
/ items = ("Thank you!")
/ fontstyle = ("Arial", 8%, true, false, false, false, 5, 1)
/ position = (50%, 50%)
/ size = (80%, 80%)
/ vjustify = center
</text>

<text exit>
/ items = ("<press spacebar to exit>")
/ fontstyle = ("Arial", 3%, false, false, false, false, 5, 1)
/ position = (50%, 90%)
/ size = (80%, 5%)
/ vjustify = center
</text>

<text errorfeedback>
/items = ("Incorrect")
/ fontstyle = ("Times New Roman", parameters.fontheight, false, false, false, false, 5, 1)
/ txcolor = red
/position = (50%, 50%)
</text>

<text getReady>
/ items = ("Get Ready:
~n<%expressions.buttoninstruct1%>")
/ fontstyle = ("Arial", 4.00%, false, false, false, false, 5, 1)
/ size = (80%, 40%)
/ vjustify = center
</text>

****************************************************************************************************
general instruction expressions: adjust the instruction text depending on device used to run script
****************************************************************************************************
<expressions>
/buttoninstruct1 = if (computer.touch && !computer.hasKeyboard) {"place your index fingers over the left and right response buttons";} 
else {"put your index fingers on the '<%parameters.responsekey1%>' and '<%parameters.responsekey2%>' keys";}
</expressions>

**************************************************************************************************************
**************************************************************************************************************
	EDITABLE LISTS: change editable lists here
**************************************************************************************************************
**************************************************************************************************************

********************************************************************
ISI Lists: control of ISI  IF parameters.usefixedISI = false
********************************************************************

Note: this is an example list for testing two different ISI for the 12 R pairs
(=>6 repetitions of each ISI)
<list ISI_R>
/items = (100, 500)
/poolSize = 24
/replace = false
/ resetinterval = 1
</list>

Note: this is an example list for testing two different ISI for the 12 UR pairs
(=>6 repetitions of each ISI)

<list ISI_UR>
/items = (100, 500)
/poolSize = 24
/replace = false
/ resetinterval = 1
</list>


**************************************************************************************************************
								!!!REMAINING CODE: Customize after careful consideration only!!!
**************************************************************************************************************


**************************************************************************************************************
**************************************************************************************************************
	DEFAULTS
**************************************************************************************************************
**************************************************************************************************************
script requires Inquisit 6.5.2.0 or higher

<defaults>
/canvasaspectratio = (4,3)
/minimumversion = "6.5.2.0"
/ fontstyle = ("Arial", 3%, false, false, false, false, 5, 1)
/txbgcolor = white
/ txcolor = black
</defaults>

*******************************************************************************************************************
*******************************************************************************************************************
	DATA: this section contains data file information
*******************************************************************************************************************
*******************************************************************************************************************

********************
raw data
********************

<data>
/columns = (build, inquisit.version, computer.platform, date, time, subject, group, session, blockcode, blocknum, 
trialcode, trialnum, values.currentisi, values.relatedness, values.prime, values.target, response, values.resp, correct, latency)
</data>

********************
summary data
********************
RT = reaction time

UR = unrelated
R = related

<summarydata>
/columns = (script.startDate, script.startTime, script.subjectId, script.elapsedTime, script.completed, 
parameters.usefixedISI, parameters.fixedISI, parameters.maxtargetpresentation, parameters.ITI, 
parameters.fontheight, expressions.errorrate_R, expressions.errorrate_UR, expressions.meanRT_R, expressions.meanRT_UR, 
expressions.stdevRT_R, expressions.stdevRT_UR, expressions.DiffRT)
</summarydata>

*******************************************************************************************************************
*******************************************************************************************************************
	VALUES: automatically updated
*******************************************************************************************************************
*******************************************************************************************************************

/RELATEDwordkey-							assigned scancode/associated label for RELATED word key
/UNRELATEDwordkey:							assigned scancode/associated label for UNRELATED word key
/leftcategory:								presents the assigned category (UNRELATED or RELATED) response button on the left side
/rightcategory:								presents the assigned category (UNRELATED or RELATED) response button on the right side
/relatedness:								1 = related target; 2 = unrelated target
/currentISI:								the currently assigned inter-stimulus interval 
											(time between offset of prime and onset of target)									
/prime_itemnumber:							the item number of the current prime
/prime:										stores the current prime wav file played
/target:									stores the current visual target associated with the selected prime
/resp:										the response: RELATED vs. UNRELATED

<values>
/RELATEDwordkey = parameters.responsekey1
/UNRELATEDwordkey = parameters.responsekey2
/leftcategory = "RELATED"
/rightcategory = "UNRELATED"

/condition = 0
/relatedness = 0
/currentISI = 0 

/prime_itemnumber = 0
/prime = ""
/target = ""

/resp = ""
</values>

*******************************************************************************************************************
*******************************************************************************************************************
	EXPRESSIONS
*******************************************************************************************************************
*******************************************************************************************************************
Error Rates:
/errorrate_R:							(error)rate of categorizing RELATED targets as UNRELATED words
/errorrate_UR: 							(error)rate of categorizing UNRELATED targets as RELATED words

Mean Scores:
/meanRT_R:								mean latency of correctly categorizing words as related 
/meanRT_UR:								mean latency of correctly categorizing words as unrelated 

Standard Deviation Scores:
/stdevRT_R:								 standard deviation of the latency of correctly categorizing words as related 
/stdevRT_UR:							 standard deviation of the latency of correctly categorizing words as unrelated 

Difference Score:
/DiffRT: 	Difference Score between mean latency in unrelated condition and mean latency in related condition
						=> meanRT_UR is expected to be slower (bigger latency) and therefore DiffRT is expected to be positive.

<expressions>
/errorrate_R = 1 - list.ACC_R.mean
/errorrate_UR = 1 - list.ACC_UR.mean

/meanRT_R = list.RT_R.mean
/meanRT_UR = list.RT_UR.mean

/stdevRT_R = list.RT_R.standarddeviation
/stdevRT_UR = list.RT_UR.standarddeviation

/DiffRT = meanRT_UR - meanRT_R
</expressions>

**************************************************************************************************************
**************************************************************************************************************
	INSTRUCTIONS
**************************************************************************************************************
**************************************************************************************************************

<trial finish>
/ stimulusframes = [1 = clearScreen, finish]
/ timeout = 500
/ recorddata = false
</trial>

*************************************
General Helper Instruction Trials/Blocks
*************************************
This trial is used when participants are asked to place their fingers on specific response
buttons. On the touchscreen, this trial presents the (inactive) response buttons to the participants.

<trial getReady>
/ stimulusframes = [1 = getReady]
/ trialduration = parameters.getReadyDuration
/ validresponse = (parameters.responsekey1, parameters.responsekey2)
/ beginresponsetime = parameters.getReadyDuration
/ errormessage = false
/ recorddata = false
</trial>

*******************************************************************************************************************
*******************************************************************************************************************
	STIMULI
*******************************************************************************************************************
*******************************************************************************************************************

<text LeftCat>
/items = ("<%values.leftcategory%>")
/ fontstyle = ("Arial", 3.5%, true, false, false, false, 5, 1)  // Reduced the font size slightly
/ txcolor = blue
/ size = (18%, 8%)  // Increased the width of the text box
/ position = (10%, 8%)
/ halign = center   // Centered text alignment to prevent clipping
</text>

<text RightCat>
/items = ("<%values.rightcategory%>")
/ fontstyle = ("Arial", 3.5%, true, false, false, false, 5, 1)  // Reduced the font size slightly
/ txcolor = blue
/ size = (18%, 8%)  // Increased the width of the text box
/ position = (85%, 8%)  // Adjusted position to fit text better
/ halign = center   // Centered text alignment
</text>

	
****************************
critical pairs:
primes = audiofiles of words
targets = visual words
R = "typical" American English with related words
UR = "typical" American English with unrelated words
****************************

<sound prime_R>
/items = primes_R
/select = noreplace
/volume = 0
/playthrough = true
</sound>

<text target_R>
/items = targets_R
/select = current(prime_R)
/ fontstyle = ("Times New Roman", parameters.fontheight, false, false, false, false, 5, 1)
/ txcolor = black
/position = (50%, 50%)
</text>

<sound prime_UR>
/items = primes_UR
/select = noreplace
/volume = 0
/playthrough = true
</sound>

<text target_UR>
/items = targets_UR
/select = current(prime_UR)
/ fontstyle = ("Times New Roman", parameters.fontheight, false, false, false, false, 5, 1)
/ txcolor = black
/position = (50%, 50%)
</text>

Note: the prime-target pairs are randomly selected without replacement from their respective item lists.
	=> all 48 pairs are presented
	=> no pairs are repeated
	=> order is random and varies participant to participant

**************************************************************************************************************
**************************************************************************************************************
	LISTS	
**************************************************************************************************************
**************************************************************************************************************

*************************************************
Data Lists: used for descriptive statistics
* store correct latencies/accuracy data
* fill up during runtime
*************************************************

Note: list stores 1 = correct response; 0 = incorrect response for each relevant trial
any response coded as an error is automatically coded as 0
<list ACC_R>
</list>

<list ACC_UR>
</list>

Note: list stores the latency of correct responses for each relevant trial
<list RT_R>
</list>

<list RT_UR>
</list>

*******************************************************************************************************************
*******************************************************************************************************************
	TRIALS
*******************************************************************************************************************
*******************************************************************************************************************

************************ 
Related Trials:
************************ 

prime_R:
* selects randomly (without replacement) the next prime for R and plays it
* calls trial.target_R
<trial prime_R>
/ontrialbegin = [
	values.relatedness = 1;
	values.condition = "task";
	values.target = "";
	if (parameters.fixedISI == false) {
		values.currentisi = list.isi_R.nextValue;
	} else {
		values.currentisi = parameters.fixedISI;
	}
]
/stimulusframes = [1 = prime_R]
/ontrialend = [
	values.prime_itemnumber = sound.prime_R.currentItemNumber;
	values.prime = sound.prime_R.currentItem;
]
/responseinterrupt = trial
/timeout = 0 
/branch = [return trial.target_R;]
/posttrialpause = values.currentisi
/recorddata = false
</trial>

target_R:
* selects the appropriate target for R and presents it in the middle of the screen
* collects trial data
* updates summary variables
<trial target_R>
/stimulusframes = [1 = target_R]
/validresponse = (values.RELATEDwordkey, values.UNRELATEDwordkey)
/monkeyresponse = ("A", "L")
/correctresponse = (values.RELATEDwordkey)
/ontrialend = [
	values.target = text.target_R.currentItem;

	list.ACC_R.appendItem(trial.target_R.correct);
	if (trial.target_R.correct) {
		list.RT_R.appendItem(trial.target_R.latency);
		values.resp = "RELATED";
	} else {
		values.resp = "UNRELATED";
	}
		
]
/recorddata = true
/timeout = parameters.maxtargetpresentation
/posttrialpause = parameters.ITI
</trial>


************************ 
Unrelated Trials:
***********************

prime_UR:
* selects randomly (without replacement) the next prime for UR and plays it
* calls trial.target_UR
<trial prime_UR>
/ontrialbegin = [
	values.relatedness = 2;
	values.condition = "task";
	values.target = "";
	if (parameters.fixedISI == false) {
		values.currentisi = list.isi_UR.nextValue;
	} else {
		values.currentisi = parameters.fixedISI;
	}
]
/stimulusframes = [1 = prime_UR]
/ontrialend = [
	values.prime_itemnumber = sound.prime_UR.currentItemNumber;
	values.prime = sound.prime_UR.currentItem;
]
/responseinterrupt = trial
/timeout = 0 
/branch = [return trial.target_UR;]
/posttrialpause = values.currentisi
/recorddata = false
</trial>

target_UR:
* selects the appropriate target for UR and presents it in the middle of the screen
* collects trial data
* updates summary variables
<trial target_UR>
/stimulusframes = [1 = target_UR]
/validresponse = (values.RELATEDwordkey, values.UNRELATEDwordkey)
/monkeyresponse = ("A", "L")
/correctresponse = (values.UNRELATEDwordkey)
/ontrialend = [
	values.target = text.target_UR.currentItem;
	
	list.ACC_UR.appendItem(trial.target_UR.correct);
	if (trial.target_UR.correct) {
		list.RT_UR.appendItem(trial.target_UR.latency);
		values.resp = "RELATED";
	} else {
		values.resp = "UNRELATED";
	}
]
/recorddata = true
/timeout = parameters.maxtargetpresentation
/posttrialpause = parameters.ITI
</trial>

*******************************************************************************************************************
*******************************************************************************************************************
	BLOCKS
*******************************************************************************************************************
*******************************************************************************************************************

<block task>
/ bgstim = (LeftCat, RightCat)
/ trials = [
	1 = getReady;
	2-49 = noreplace(prime_R, prime_UR);
]
</block>

<block finish>
/ trials = [1 = finish]
</block>

*******************************************************************************************************************
*******************************************************************************************************************
	EXPERIMENT
*******************************************************************************************************************
*******************************************************************************************************************
Responsekey assignments are not counterbalanced across participants by groupnumber

<expt a>
/preinstructions = (intro)
/groups = (1 of 1)
/onexptbegin = [
	values.RELATEDwordkey = parameters.responsekey1; 
	values.leftcategory = "RELATED";
	values.UNRELATEDwordkey = parameters.responsekey2; 
	values.rightcategory = "UNRELATED";
]
/blocks = [
	1 = task;
	2 = finish;
]
</expt>

*******************************************************************************************************************
												End of File
*******************************************************************************************************************
